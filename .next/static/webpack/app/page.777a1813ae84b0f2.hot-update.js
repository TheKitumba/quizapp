"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/data.ts":
/*!***************************!*\
  !*** ./src/utils/data.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   questions: function() { return /* binding */ questions; }\n/* harmony export */ });\nconst questions = [\n    // Perguntas para KZ 1000\n    {\n        id: 1,\n        question: \"Qual \\xe9 a capital da Fran\\xe7a?\",\n        answers: [\n            {\n                text: \"Berlim\",\n                correct: false\n            },\n            {\n                text: \"Paris\",\n                correct: true\n            },\n            {\n                text: \"Roma\",\n                correct: false\n            },\n            {\n                text: \"Madri\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 2,\n        question: 'Quem escreveu \"Dom Quixote\"?',\n        answers: [\n            {\n                text: \"Miguel de Cervantes\",\n                correct: true\n            },\n            {\n                text: \"William Shakespeare\",\n                correct: false\n            },\n            {\n                text: \"Fernando Pessoa\",\n                correct: false\n            },\n            {\n                text: \"Gabriel Garc\\xeda M\\xe1rquez\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 3,\n        question: \"Em que ano foi assinada a Declara\\xe7\\xe3o de Independ\\xeancia dos Estados Unidos?\",\n        answers: [\n            {\n                text: \"1776\",\n                correct: true\n            },\n            {\n                text: \"1789\",\n                correct: false\n            },\n            {\n                text: \"1800\",\n                correct: false\n            },\n            {\n                text: \"1620\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 4,\n        question: \"Quem foi o primeiro presidente do Brasil?\",\n        answers: [\n            {\n                text: \"Get\\xfalio Vargas\",\n                correct: false\n            },\n            {\n                text: \"Juscelino Kubitschek\",\n                correct: false\n            },\n            {\n                text: \"Deodoro da Fonseca\",\n                correct: true\n            },\n            {\n                text: \"Tancredo Neves\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 5,\n        question: \"Qual \\xe9 o maior oceano do mundo?\",\n        answers: [\n            {\n                text: \"Atl\\xe2ntico\",\n                correct: false\n            },\n            {\n                text: \"\\xcdndico\",\n                correct: false\n            },\n            {\n                text: \"\\xc1rtico\",\n                correct: false\n            },\n            {\n                text: \"Pac\\xedfico\",\n                correct: true\n            }\n        ]\n    },\n    {\n        id: 6,\n        question: 'Quem pintou a \"\\xdaltima Ceia\"?',\n        answers: [\n            {\n                text: \"Vincent van Gogh\",\n                correct: false\n            },\n            {\n                text: \"Leonardo da Vinci\",\n                correct: true\n            },\n            {\n                text: \"Michelangelo\",\n                correct: false\n            },\n            {\n                text: \"Pablo Picasso\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 7,\n        question: \"Qual \\xe9 a maior montanha do mundo?\",\n        answers: [\n            {\n                text: \"Monte Everest\",\n                correct: true\n            },\n            {\n                text: \"Monte Kilimanjaro\",\n                correct: false\n            },\n            {\n                text: \"Monte Fuji\",\n                correct: false\n            },\n            {\n                text: \"Monte McKinley\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 8,\n        question: 'Quem foi o autor de \"Romeu e Julieta\"?',\n        answers: [\n            {\n                text: \"Charles Dickens\",\n                correct: false\n            },\n            {\n                text: \"William Shakespeare\",\n                correct: true\n            },\n            {\n                text: \"Jane Austen\",\n                correct: false\n            },\n            {\n                text: \"Homer\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 9,\n        question: \"Qual \\xe9 o elemento mais abundante na crosta terrestre?\",\n        answers: [\n            {\n                text: \"Ouro\",\n                correct: false\n            },\n            {\n                text: \"Ferro\",\n                correct: true\n            },\n            {\n                text: \"Carbono\",\n                correct: false\n            },\n            {\n                text: \"Cobre\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 10,\n        question: 'Quem \\xe9 o autor de \"Cem Anos de Solid\\xe3o\"?',\n        answers: [\n            {\n                text: \"Gabriel Garc\\xeda M\\xe1rquez\",\n                correct: true\n            },\n            {\n                text: \"Isabel Allende\",\n                correct: false\n            },\n            {\n                text: \"Mario Vargas Llosa\",\n                correct: false\n            },\n            {\n                text: \"Jorge Luis Borges\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 11,\n        question: \"Qual \\xe9 a velocidade da luz?\",\n        answers: [\n            {\n                text: \"300,000 km/s\",\n                correct: true\n            },\n            {\n                text: \"150,000 km/s\",\n                correct: false\n            },\n            {\n                text: \"500,000 km/s\",\n                correct: false\n            },\n            {\n                text: \"750,000 km/s\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 12,\n        question: \"Quem foi o l\\xedder da Revolu\\xe7\\xe3o Cubana?\",\n        answers: [\n            {\n                text: \"Che Guevara\",\n                correct: false\n            },\n            {\n                text: \"Fidel Castro\",\n                correct: true\n            },\n            {\n                text: \"Raul Castro\",\n                correct: false\n            },\n            {\n                text: \"Camilo Cienfuegos\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 13,\n        question: \"Qual \\xe9 o maior deserto do mundo?\",\n        answers: [\n            {\n                text: \"Deserto do Saara\",\n                correct: true\n            },\n            {\n                text: \"Deserto de Atacama\",\n                correct: false\n            },\n            {\n                text: \"Deserto da Ar\\xe1bia\",\n                correct: false\n            },\n            {\n                text: \"Deserto da Austr\\xe1lia\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 14,\n        question: \"Quem foi o primeiro homem a pisar na Lua?\",\n        answers: [\n            {\n                text: \"Neil Armstrong\",\n                correct: true\n            },\n            {\n                text: \"Buzz Aldrin\",\n                correct: false\n            },\n            {\n                text: \"Yuri Gagarin\",\n                correct: false\n            },\n            {\n                text: \"Alan Shepard\",\n                correct: false\n            }\n        ]\n    },\n    {\n        id: 15,\n        question: \"Qual \\xe9 o rio mais longo do mundo?\",\n        answers: [\n            {\n                text: \"Rio Amazonas\",\n                correct: true\n            },\n            {\n                text: \"Rio Nilo\",\n                correct: false\n            },\n            {\n                text: \"Rio Yangtz\\xe9\",\n                correct: false\n            },\n            {\n                text: \"Rio Mississippi\",\n                correct: false\n            }\n        ]\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/data.ts\n"));

/***/ })

});